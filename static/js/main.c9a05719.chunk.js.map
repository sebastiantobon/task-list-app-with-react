{"version":3,"sources":["components/header.js","components/Form.js","components/tarea.js","components/listaTarea.js","App.js","index.js"],"names":["Header","mostrarCompletadas","cambiarMostrar","toogleCompletadas","className","onClick","icon","faEyeSlash","faEye","FormTareas","tareas","CambiarTareas","useState","inputTarea","CambiarTareaInput","action","onSubmit","e","preventDefault","id","uuidv4","text","completada","type","placeholder","value","onChange","target","handleInput","faPlusSquare","Tarea","tarea","toogleCompletada","editarTarea","borrarTarea","editandoTarea","cambiarEditandoTarea","nuevaTarea","cambiarNuevaTarea","faCheckSquare","faSquare","faEdit","faTimes","ListaTarea","map","nuevoTexto","filter","length","App","tareasGuardadas","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","configMostrarCompletadas","cambiarMostrarCompletadas","toString","console","log","Form","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9a05719.chunk.js","sourcesContent":["import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEye, faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\n \nconst Header = ({mostrarCompletadas, cambiarMostrar}) => {\n\n    const toogleCompletadas = () => {\n        cambiarMostrar(!mostrarCompletadas)\n    }\n\n    return ( \n        <header className=\"header\">\n            <h1 className=\"header-title\">Lista de tareas</h1>\n            {mostrarCompletadas ?   \n                    <button onClick={() => toogleCompletadas()}  className=\"header-btn\"> \n                        No mostrar completadas\n                        <FontAwesomeIcon icon={faEyeSlash}  className=\"header-icon-btn\" />\n                    </button>\n                    :\n                    <button onClick={() => toogleCompletadas()}  className=\"header-btn\"> \n                         Mostrar completadas\n                        <FontAwesomeIcon icon={faEye} className=\"header-icon-btn\" />\n                    </button>\n        }\n        </header>\n     );\n}\n\nexport default Header;","import React, {useState} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlusSquare} from \"@fortawesome/free-solid-svg-icons\";\n\nconst FormTareas = ({tareas, CambiarTareas}) => {\n    const [inputTarea, CambiarTareaInput] = useState(\"\");\n\n   const handleInput = (e) => {\n       CambiarTareaInput(e.target.value);\n   }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        CambiarTareas(\n            [\n                ...tareas, \n                {\n                    id: uuidv4(),\n                    text: inputTarea,\n                    completada: false \n                  }\n            ]\n            )\n            CambiarTareaInput(\"\")\n    }\n\n    return ( \n        <form action=\"\" className=\"form-tarea\" onSubmit={handleSubmit}>\n             <input \n                type=\"text\" \n                className=\"form-tarea-input\" \n                placeholder=\"Escribe una tarea\"\n                value={inputTarea}\n                onChange={(e) => handleInput(e)  }\n                />\n             <button \n                type=\"submit\"\n                className=\"form-tarea-btn\"\n            >\n                <FontAwesomeIcon \n                    icon={faPlusSquare} \n                    className=\"form-tarea-icon\" />\n             </button>\n        </form>\n     );\n}\n \nexport default FormTareas;","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare, faEdit, faSquare, faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Tarea = ({tarea, toogleCompletada, editarTarea, borrarTarea }) => {\n    const [editandoTarea, cambiarEditandoTarea] = useState(false);\n    const [nuevaTarea, cambiarNuevaTarea] = useState(tarea.text)\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        editarTarea(tarea.id, nuevaTarea);\n        cambiarEditandoTarea(false)\n    }\n\n\n    return (  \n        <li className=\"list-tareas-tarea\">\n            <FontAwesomeIcon \n            icon={tarea.completada ? faCheckSquare : faSquare}\n            className=\"list-tarea-icon list-tarea-check\"\n            onClick={() => toogleCompletada(tarea.id)}\n             />\n            <div className=\"list-tarea-text\">\n                {editandoTarea ? \n                <form action=\"\" onSubmit={handleSubmit} className=\"form-editar-tarea\">\n                    <input \n                    type=\"text\"\n                    className=\"form-editar-tarea-input\"\n                    value={nuevaTarea}                    \n                    onChange={(e) => cambiarNuevaTarea(e.target.value)} \n                    />\n                <button\n                    type=\"submit\"\n                    className=\"form-editar-tarea-btn\"\n                >\n                    Actulizar\n                </button>\n                </form>\n                : tarea.text\n            }\n            </div>\n            <div className=\"list-tarea-contenedor-btn\">\n                <FontAwesomeIcon \n                icon={faEdit} \n                className=\"list-tarea-icon list-tarea-accion\"\n                onClick={() => cambiarEditandoTarea(! editandoTarea)}\n                />\n                <FontAwesomeIcon \n                icon={faTimes} \n                className=\"list-tarea-icon list-tarea-accion\"\n                onClick={ () => borrarTarea(tarea.id)}\n                />\n            </div>\n        </li>\n\n\n    );\n}\n \nexport default Tarea;","/* eslint-disable array-callback-return */\nimport React from \"react\";\nimport Tarea from \"./tarea\";\n\n\nconst ListaTarea = ({tareas, CambiarTareas, mostrarCompletadas}) => {\n\n    const toogleCompletada = (id) => {\n        CambiarTareas(tareas.map( (tarea) => {\n            if(tarea.id === id){\n                return {...tarea, completada: ! tarea.completada}\n            }\n            return tarea;\n        } ));\n    }\n    const editarTarea = (id, nuevoTexto) => {\n        CambiarTareas(tareas.map( (tarea) => {\n            if(tarea.id === id){\n                return {...tarea, text: nuevoTexto}\n            }\n            return tarea;\n        } ));\n    }\n    const borrarTarea = (id) => {\n        CambiarTareas(tareas.filter( (tarea) => {\n            if(tarea.id !== id){\n                return tarea;\n            }\n            return;\n        } ));\n    }\n      \n\n\n    return ( \n        <ul className=\"list-tarea\">\n            {\n             tareas.length > 0 ?  tareas.map((tarea) => {\n                 if(mostrarCompletadas){\n                     return <Tarea \n                                 className=\"\" \n                                 tarea={tarea} \n                                 key={tarea.id} \n                                 toogleCompletada={toogleCompletada}\n                                 editarTarea={editarTarea}\n                                 borrarTarea={borrarTarea}\n                           />\n                           // SI LA TAREA NO ESTA COMPLETADA, LA DEVOLVEMOS\n                 } else if( ! tarea.completada){\n                     return <Tarea \n                     className=\"\" \n                     tarea={tarea} \n                     key={tarea.id} \n                     toogleCompletada={toogleCompletada}\n                     editarTarea={editarTarea}\n                     borrarTarea={borrarTarea}\n                            />\n                 }\n                 // SI YA ESTA COMPLETADA NO LA DEVOLVEMOS\n                 return;\n            })\n            :  <div className =\"list-tareas-mensaje\">No hay tareas agregadas</div>\n        }\n        </ul> \n     );\n}\n \nexport default ListaTarea;","import React, {useState, useEffect} from \"react\"\nimport './App.css';\nimport Header from \"./components/header\";\nimport FormTareas from \"./components/Form\"\nimport ListaTarea from \"./components/listaTarea\"\n\n\n\nconst App = () => {\n  //obtenemos las tareas guardadas de localStorage\n  const tareasGuardadas = \n  localStorage.getItem(\"tareas\") ? \n  JSON.parse(localStorage.getItem(\"tareas\")) : [] ;\n\n  //Establecemos el estado de las tareas. y el estado es el que estamos guardando arriba\n  const [tareas, CambiarTareas] = useState (tareasGuardadas);\n   \n  // Guardando el estado dentro de localStorage\n  useEffect(() => {\n    localStorage.setItem(\"tareas\", JSON.stringify(tareas))\n    //console.log(JSON.stringify(tareas))\n  }, [tareas])\n\n\n    // Acedemos a localStoreage y comprobamos si mostrarCompletadas es null \n    let configMostrarCompletadas = \"\";\n   if(localStorage.getItem(\"mostrarCompletadas\") === null){\n     configMostrarCompletadas = true;\n   } else {\n    configMostrarCompletadas =  localStorage.getItem(\"mostrarCompletadas\") === \"true\";\n   }\n\n\n  // El estado de mostrar completadas\n  const [mostrarCompletadas, cambiarMostrarCompletadas] = useState (configMostrarCompletadas);\n\n  //guardando el estado de Completadas, con toString le cambiamos el valor a boolean\n  useEffect(() => {\n    localStorage.setItem(\"mostrarCompletadas\", mostrarCompletadas.toString())\n  }, [mostrarCompletadas])\n\n  console.log(tareas)\n\n  return (\n   <div className=\"contenedor\">\n    <Header \n    mostrarCompletadas={mostrarCompletadas} \n    cambiarMostrar={cambiarMostrarCompletadas} \n    />\n    <FormTareas tareas={tareas} CambiarTareas={CambiarTareas} />\n    <ListaTarea \n    tareas={tareas} \n    CambiarTareas={CambiarTareas} \n    mostrarCompletadas={mostrarCompletadas}\n   />\n   <h1><a href=\"https://github.com/sebastiantobon/task-list-app-with-react\">Volver a Repositorio</a></h1>\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}